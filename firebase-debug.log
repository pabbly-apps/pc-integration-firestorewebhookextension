[debug] [2025-06-16T08:03:35.080Z] ----------------------------------------------------------------------
[debug] [2025-06-16T08:03:35.082Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\rounak.kumar_pabbly\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js ext:dev:upload pabblyconnect/firestore-pabbly-connector --project=pabblyconnect-16ab5 --debug
[debug] [2025-06-16T08:03:35.083Z] CLI Version:   14.4.0
[debug] [2025-06-16T08:03:35.083Z] Platform:      win32
[debug] [2025-06-16T08:03:35.083Z] Node Version:  v22.14.0
[debug] [2025-06-16T08:03:35.083Z] Time:          Mon Jun 16 2025 13:33:35 GMT+0530 (India Standard Time)
[debug] [2025-06-16T08:03:35.083Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-06-16T08:03:35.257Z] Object "/extensions" in "firebase.json" has unknown property: {"additionalProperty":"firestore-pabbly-connector"}
[debug] [2025-06-16T08:03:35.261Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-06-16T08:03:35.261Z] > authorizing via signed-in user (rounak.kumar@pabbly.com)
[info] i  extensions: ensuring required API firebaseextensionspublisher.googleapis.com is enabled... 
[debug] [2025-06-16T08:03:35.262Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:03:35.263Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:03:35.264Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/pabblyconnect-16ab5/services/firebaseextensionspublisher.googleapis.com [none]
[debug] [2025-06-16T08:03:35.264Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/pabblyconnect-16ab5/services/firebaseextensionspublisher.googleapis.com x-goog-quota-user=projects/pabblyconnect-16ab5
[debug] [2025-06-16T08:03:37.112Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/pabblyconnect-16ab5/services/firebaseextensionspublisher.googleapis.com 200
[debug] [2025-06-16T08:03:37.112Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/pabblyconnect-16ab5/services/firebaseextensionspublisher.googleapis.com [omitted]
[info] +  extensions: required API firebaseextensionspublisher.googleapis.com is enabled 
[debug] [2025-06-16T08:03:37.114Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:03:37.114Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:03:37.114Z] >>> [apiv2][query] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/-/publisherProfile publisherId=pabblyconnect
[debug] [2025-06-16T08:03:38.967Z] <<< [apiv2][status] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/-/publisherProfile 200
[debug] [2025-06-16T08:03:38.967Z] <<< [apiv2][body] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/-/publisherProfile {"name":"projects/871099313349/publisherProfile","publisherId":"pabblyconnect","registerTime":"2025-06-09T09:44:30.417886Z","displayName":"Pabbly Connect","websiteUri":"https://www.pabbly.com","state":"ACTIVE"}
[debug] [2025-06-16T08:03:38.969Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:03:38.969Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:03:38.970Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/871099313349/services/cloudresourcemanager.googleapis.com [none]
[debug] [2025-06-16T08:03:38.970Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/871099313349/services/cloudresourcemanager.googleapis.com x-goog-quota-user=projects/871099313349
[debug] [2025-06-16T08:03:39.417Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/871099313349/services/cloudresourcemanager.googleapis.com 200
[debug] [2025-06-16T08:03:39.418Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/871099313349/services/cloudresourcemanager.googleapis.com [omitted]
[debug] [2025-06-16T08:03:39.418Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:03:39.419Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:03:39.419Z] >>> [apiv2][query] GET https://cloudresourcemanager.googleapis.com/v1/projects/871099313349 [none]
[debug] [2025-06-16T08:03:40.942Z] <<< [apiv2][status] GET https://cloudresourcemanager.googleapis.com/v1/projects/871099313349 200
[debug] [2025-06-16T08:03:40.943Z] <<< [apiv2][body] GET https://cloudresourcemanager.googleapis.com/v1/projects/871099313349 {"projectNumber":"871099313349","projectId":"pabblyconnect-16ab5","lifecycleState":"ACTIVE","name":"pabblyconnect-16ab5","labels":{"firebase":"enabled","firebase-core":"disabled"},"createTime":"2025-06-09T09:43:49.007722Z","parent":{"type":"organization","id":"266066249094"}}
[debug] [2025-06-16T08:03:40.943Z] Checking if latest publisher TOS has been accepted by 871099313349...
[debug] [2025-06-16T08:03:40.944Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:03:40.944Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:03:40.945Z] >>> [apiv2][query] GET https://firebaseextensionstos-pa.googleapis.com/v1/projects/871099313349/publishertos [none]
[debug] [2025-06-16T08:03:42.691Z] <<< [apiv2][status] GET https://firebaseextensionstos-pa.googleapis.com/v1/projects/871099313349/publishertos 200
[debug] [2025-06-16T08:03:42.692Z] <<< [apiv2][body] GET https://firebaseextensionstos-pa.googleapis.com/v1/projects/871099313349/publishertos {"name":"projects/871099313349/publishertos","lastAcceptedVersion":"v1","lastAcceptedTime":"2025-06-13T10:04:58.465854Z","latestTosVersion":"v1"}
[debug] [2025-06-16T08:03:42.693Z] Already accepted version v1 of Extensions publisher TOS.
[debug] [2025-06-16T08:03:42.694Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:03:42.695Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:03:42.695Z] >>> [apiv2][query] GET https://firebaseextensionspublisher.googleapis.com/v1beta/publishers/pabblyconnect/extensions/firestore-pabbly-connector [none]
[debug] [2025-06-16T08:03:43.285Z] <<< [apiv2][status] GET https://firebaseextensionspublisher.googleapis.com/v1beta/publishers/pabblyconnect/extensions/firestore-pabbly-connector 200
[debug] [2025-06-16T08:03:43.285Z] <<< [apiv2][body] GET https://firebaseextensionspublisher.googleapis.com/v1beta/publishers/pabblyconnect/extensions/firestore-pabbly-connector {"name":"publishers/pabblyconnect/extensions/firestore-pabbly-connector","ref":"pabblyconnect/firestore-pabbly-connector","state":"DEPRECATED","createTime":"2025-06-14T19:21:13.542912Z","publisher":{"displayName":"Pabbly Connect"}}
[debug] [2025-06-16T08:03:43.287Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:03:43.288Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:03:43.288Z] >>> [apiv2][query] GET https://firebaseextensionspublisher.googleapis.com/v1beta/publishers/pabblyconnect/extensions/firestore-pabbly-connector/versions/latest [none]
[debug] [2025-06-16T08:03:43.770Z] <<< [apiv2][status] GET https://firebaseextensionspublisher.googleapis.com/v1beta/publishers/pabblyconnect/extensions/firestore-pabbly-connector/versions/latest 400
[debug] [2025-06-16T08:03:43.771Z] <<< [apiv2][body] GET https://firebaseextensionspublisher.googleapis.com/v1beta/publishers/pabblyconnect/extensions/firestore-pabbly-connector/versions/latest {"error":{"code":400,"message":"ExtensionVersion name `publishers/pabblyconnect/extensions/firestore-pabbly-connector` is invalid, must be of form `publishers/*/extensions/*/versions/*`","status":"INVALID_ARGUMENT"}}
[info] 
Extension: pabblyconnect/firestore-pabbly-connector
State: Deprecated
Latest Version: -
Version in Extensions Hub: -
Source in GitHub: Local source

[info] Validating source code at https://github.com/pabbly-apps/pc-integration-firestorewebhookextension\tree\v0.1.0...
[debug] [2025-06-16T08:04:23.428Z] Data is 242063
[debug] [2025-06-16T08:04:23.429Z] [unzip] Entry: pc-integration-firestorewebhookextension-0.1.0/ (compressed_size=0 bytes, uncompressed_size=0 bytes)
[debug] [2025-06-16T08:04:23.429Z] [unzip] Processing entry: pc-integration-firestorewebhookextension-0.1.0\
[debug] [2025-06-16T08:04:23.429Z] [unzip] mkdir: C:\Users\ROUNAK~1.KUM\AppData\Local\Temp\tmp-18148-FcY96fU7o1cW\pc-integration-firestorewebhookextension-0.1.0\
[debug] [2025-06-16T08:04:23.430Z] [unzip] Entry: pc-integration-firestorewebhookextension-0.1.0/CHANGELOG.md (compressed_size=316 bytes, uncompressed_size=532 bytes)
[debug] [2025-06-16T08:04:23.430Z] [unzip] Processing entry: pc-integration-firestorewebhookextension-0.1.0\CHANGELOG.md
[debug] [2025-06-16T08:04:23.430Z] [unzip] else mkdir: C:\Users\ROUNAK~1.KUM\AppData\Local\Temp\tmp-18148-FcY96fU7o1cW\pc-integration-firestorewebhookextension-0.1.0
[debug] [2025-06-16T08:04:23.431Z] [unzip] deflating: C:\Users\ROUNAK~1.KUM\AppData\Local\Temp\tmp-18148-FcY96fU7o1cW\pc-integration-firestorewebhookextension-0.1.0\CHANGELOG.md
[debug] [2025-06-16T08:04:23.434Z] [unzip] Entry: pc-integration-firestorewebhookextension-0.1.0/POSTINSTALL.md (compressed_size=1228 bytes, uncompressed_size=2680 bytes)
[debug] [2025-06-16T08:04:23.434Z] [unzip] Processing entry: pc-integration-firestorewebhookextension-0.1.0\POSTINSTALL.md
[debug] [2025-06-16T08:04:23.434Z] [unzip] else mkdir: C:\Users\ROUNAK~1.KUM\AppData\Local\Temp\tmp-18148-FcY96fU7o1cW\pc-integration-firestorewebhookextension-0.1.0
[debug] [2025-06-16T08:04:23.435Z] [unzip] deflating: C:\Users\ROUNAK~1.KUM\AppData\Local\Temp\tmp-18148-FcY96fU7o1cW\pc-integration-firestorewebhookextension-0.1.0\POSTINSTALL.md
[debug] [2025-06-16T08:04:23.437Z] [unzip] Entry: pc-integration-firestorewebhookextension-0.1.0/PREINSTALL.md (compressed_size=1287 bytes, uncompressed_size=3614 bytes)
[debug] [2025-06-16T08:04:23.437Z] [unzip] Processing entry: pc-integration-firestorewebhookextension-0.1.0\PREINSTALL.md
[debug] [2025-06-16T08:04:23.437Z] [unzip] else mkdir: C:\Users\ROUNAK~1.KUM\AppData\Local\Temp\tmp-18148-FcY96fU7o1cW\pc-integration-firestorewebhookextension-0.1.0
[debug] [2025-06-16T08:04:23.438Z] [unzip] deflating: C:\Users\ROUNAK~1.KUM\AppData\Local\Temp\tmp-18148-FcY96fU7o1cW\pc-integration-firestorewebhookextension-0.1.0\PREINSTALL.md
[debug] [2025-06-16T08:04:23.439Z] [unzip] Entry: pc-integration-firestorewebhookextension-0.1.0/README.md (compressed_size=914 bytes, uncompressed_size=1966 bytes)
[debug] [2025-06-16T08:04:23.439Z] [unzip] Processing entry: pc-integration-firestorewebhookextension-0.1.0\README.md
[debug] [2025-06-16T08:04:23.440Z] [unzip] else mkdir: C:\Users\ROUNAK~1.KUM\AppData\Local\Temp\tmp-18148-FcY96fU7o1cW\pc-integration-firestorewebhookextension-0.1.0
[debug] [2025-06-16T08:04:23.440Z] [unzip] deflating: C:\Users\ROUNAK~1.KUM\AppData\Local\Temp\tmp-18148-FcY96fU7o1cW\pc-integration-firestorewebhookextension-0.1.0\README.md
[debug] [2025-06-16T08:04:23.441Z] [unzip] Entry: pc-integration-firestorewebhookextension-0.1.0/extension.yaml (compressed_size=2130 bytes, uncompressed_size=8923 bytes)
[debug] [2025-06-16T08:04:23.442Z] [unzip] Processing entry: pc-integration-firestorewebhookextension-0.1.0\extension.yaml
[debug] [2025-06-16T08:04:23.442Z] [unzip] else mkdir: C:\Users\ROUNAK~1.KUM\AppData\Local\Temp\tmp-18148-FcY96fU7o1cW\pc-integration-firestorewebhookextension-0.1.0
[debug] [2025-06-16T08:04:23.443Z] [unzip] deflating: C:\Users\ROUNAK~1.KUM\AppData\Local\Temp\tmp-18148-FcY96fU7o1cW\pc-integration-firestorewebhookextension-0.1.0\extension.yaml
[debug] [2025-06-16T08:04:23.445Z] [unzip] Entry: pc-integration-firestorewebhookextension-0.1.0/firebase.json (compressed_size=179 bytes, uncompressed_size=378 bytes)
[debug] [2025-06-16T08:04:23.445Z] [unzip] Processing entry: pc-integration-firestorewebhookextension-0.1.0\firebase.json
[debug] [2025-06-16T08:04:23.445Z] [unzip] else mkdir: C:\Users\ROUNAK~1.KUM\AppData\Local\Temp\tmp-18148-FcY96fU7o1cW\pc-integration-firestorewebhookextension-0.1.0
[debug] [2025-06-16T08:04:23.446Z] [unzip] deflating: C:\Users\ROUNAK~1.KUM\AppData\Local\Temp\tmp-18148-FcY96fU7o1cW\pc-integration-firestorewebhookextension-0.1.0\firebase.json
[debug] [2025-06-16T08:04:23.447Z] [unzip] Entry: pc-integration-firestorewebhookextension-0.1.0/functions/ (compressed_size=0 bytes, uncompressed_size=0 bytes)
[debug] [2025-06-16T08:04:23.447Z] [unzip] Processing entry: pc-integration-firestorewebhookextension-0.1.0\functions\
[debug] [2025-06-16T08:04:23.447Z] [unzip] mkdir: C:\Users\ROUNAK~1.KUM\AppData\Local\Temp\tmp-18148-FcY96fU7o1cW\pc-integration-firestorewebhookextension-0.1.0\functions\
[debug] [2025-06-16T08:04:23.448Z] [unzip] Entry: pc-integration-firestorewebhookextension-0.1.0/functions/.gitignore (compressed_size=188 bytes, uncompressed_size=305 bytes)
[debug] [2025-06-16T08:04:23.448Z] [unzip] Processing entry: pc-integration-firestorewebhookextension-0.1.0\functions\.gitignore
[debug] [2025-06-16T08:04:23.449Z] [unzip] else mkdir: C:\Users\ROUNAK~1.KUM\AppData\Local\Temp\tmp-18148-FcY96fU7o1cW\pc-integration-firestorewebhookextension-0.1.0\functions
[debug] [2025-06-16T08:04:23.449Z] [unzip] deflating: C:\Users\ROUNAK~1.KUM\AppData\Local\Temp\tmp-18148-FcY96fU7o1cW\pc-integration-firestorewebhookextension-0.1.0\functions\.gitignore
[debug] [2025-06-16T08:04:23.451Z] [unzip] Entry: pc-integration-firestorewebhookextension-0.1.0/functions/index.js (compressed_size=2716 bytes, uncompressed_size=9595 bytes)
[debug] [2025-06-16T08:04:23.451Z] [unzip] Processing entry: pc-integration-firestorewebhookextension-0.1.0\functions\index.js
[debug] [2025-06-16T08:04:23.451Z] [unzip] else mkdir: C:\Users\ROUNAK~1.KUM\AppData\Local\Temp\tmp-18148-FcY96fU7o1cW\pc-integration-firestorewebhookextension-0.1.0\functions
[debug] [2025-06-16T08:04:23.452Z] [unzip] deflating: C:\Users\ROUNAK~1.KUM\AppData\Local\Temp\tmp-18148-FcY96fU7o1cW\pc-integration-firestorewebhookextension-0.1.0\functions\index.js
[debug] [2025-06-16T08:04:23.453Z] [unzip] Entry: pc-integration-firestorewebhookextension-0.1.0/functions/package-lock.json (compressed_size=63830 bytes, uncompressed_size=256109 bytes)
[debug] [2025-06-16T08:04:23.454Z] [unzip] Processing entry: pc-integration-firestorewebhookextension-0.1.0\functions\package-lock.json
[debug] [2025-06-16T08:04:23.454Z] [unzip] else mkdir: C:\Users\ROUNAK~1.KUM\AppData\Local\Temp\tmp-18148-FcY96fU7o1cW\pc-integration-firestorewebhookextension-0.1.0\functions
[debug] [2025-06-16T08:04:23.455Z] [unzip] deflating: C:\Users\ROUNAK~1.KUM\AppData\Local\Temp\tmp-18148-FcY96fU7o1cW\pc-integration-firestorewebhookextension-0.1.0\functions\package-lock.json
[debug] [2025-06-16T08:04:23.458Z] [unzip] Entry: pc-integration-firestorewebhookextension-0.1.0/functions/package.json (compressed_size=639 bytes, uncompressed_size=1708 bytes)
[debug] [2025-06-16T08:04:23.458Z] [unzip] Processing entry: pc-integration-firestorewebhookextension-0.1.0\functions\package.json
[debug] [2025-06-16T08:04:23.459Z] [unzip] else mkdir: C:\Users\ROUNAK~1.KUM\AppData\Local\Temp\tmp-18148-FcY96fU7o1cW\pc-integration-firestorewebhookextension-0.1.0\functions
[debug] [2025-06-16T08:04:23.459Z] [unzip] deflating: C:\Users\ROUNAK~1.KUM\AppData\Local\Temp\tmp-18148-FcY96fU7o1cW\pc-integration-firestorewebhookextension-0.1.0\functions\package.json
[debug] [2025-06-16T08:04:23.460Z] [unzip] Entry: pc-integration-firestorewebhookextension-0.1.0/icon.png (compressed_size=165770 bytes, uncompressed_size=168270 bytes)
[debug] [2025-06-16T08:04:23.460Z] [unzip] Processing entry: pc-integration-firestorewebhookextension-0.1.0\icon.png
[debug] [2025-06-16T08:04:23.460Z] [unzip] else mkdir: C:\Users\ROUNAK~1.KUM\AppData\Local\Temp\tmp-18148-FcY96fU7o1cW\pc-integration-firestorewebhookextension-0.1.0
[debug] [2025-06-16T08:04:23.461Z] [unzip] deflating: C:\Users\ROUNAK~1.KUM\AppData\Local\Temp\tmp-18148-FcY96fU7o1cW\pc-integration-firestorewebhookextension-0.1.0\icon.png
[debug] [2025-06-16T08:04:23.481Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:04:23.481Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:04:23.482Z] >>> [apiv2][query] GET https://firebaseextensionspublisher.googleapis.com/v1beta/publishers/pabblyconnect/extensions/firestore-pabbly-connector/versions filter=id%3D%220.1.0%22&showPrereleases=true&pageSize=100&pageToken=
[debug] [2025-06-16T08:04:25.259Z] <<< [apiv2][status] GET https://firebaseextensionspublisher.googleapis.com/v1beta/publishers/pabblyconnect/extensions/firestore-pabbly-connector/versions 200
[debug] [2025-06-16T08:04:25.260Z] <<< [apiv2][body] GET https://firebaseextensionspublisher.googleapis.com/v1beta/publishers/pabblyconnect/extensions/firestore-pabbly-connector/versions {"extensionVersions":[{"name":"publishers/pabblyconnect/extensions/firestore-pabbly-connector/versions/0.1.0-beta.0","ref":"pabblyconnect/firestore-pabbly-connector@0.1.0-beta.0","spec":{"specVersion":"v1beta","name":"firestore-pabbly-connector","version":"0.1.0-beta.0","description":"Automatically send webhook POST requests to Pabbly Connect when Firestore documents are created, updated, or deleted.","apis":[{"apiName":"firestore.googleapis.com","reason":"Required to listen to Firestore document changes"}],"resources":[{"name":"onCreateWebhook","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.create\n  resource: projects/${PROJECT_ID}/databases/${param:DATABASE_NAME}/documents/${param:CREATE_COLLECTION_PATH}\nlocation: ${param:LOCATION}\nruntime: nodejs20\n","description":"Listens for document creation events in Firestore and sends webhook notifications","deletionPolicy":"DELETE"},{"name":"onUpdateWebhook","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.update\n  resource: projects/${PROJECT_ID}/databases/${param:DATABASE_NAME}/documents/${param:UPDATE_COLLECTION_PATH}\nlocation: ${param:LOCATION}\nruntime: nodejs20\n","description":"Listens for document update events in Firestore and sends webhook notifications","deletionPolicy":"DELETE"},{"name":"onDeleteWebhook","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.delete\n  resource: projects/${PROJECT_ID}/databases/${param:DATABASE_NAME}/documents/${param:DELETE_COLLECTION_PATH}\nlocation: ${param:LOCATION}\nruntime: nodejs20\n","description":"Listens for document deletion events in Firestore and sends webhook notifications","deletionPolicy":"DELETE"}],"author":{"authorName":"Pabbly Connect","email":"support@pabbly.com","url":"https://connect.pabbly.com"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/pabbly-apps/pc-integration-firestorewebhookextension/blob/main/CHANGELOG.md","sourceUrl":"https://github.com/pabbly-apps/pc-integration-firestorewebhookextension","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? For help selecting a location, refer to the location selection guide.","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"DATABASE_NAME","label":"Firestore Database Name","type":"STRING","description":"The Firestore database to monitor (e.g., (default), TestDB).  If unsure, use (default).","required":true,"default":"(default)"},{"param":"WEBHOOK_URL","label":"Pabbly Connect Webhook URL","type":"STRING","description":"The complete URL where webhook notifications will be sent via HTTP POST. This should be a publicly accessible endpoint that can receive JSON payloads.","required":true,"example":"https://connect.pabbly.com/workflow/sendwebhookdata/IjU3NjYwNTZiMDY*****zM1MjZmzMzUxMzE","validationRegex":"^https:\\/\\/(connect\\.pabbly\\.com|webhook\\.site)\\/.*","validationErrorMessage":"Please enter a URL starting with https://connect.pabbly.com or https://webhook.site"},{"param":"CREATE_COLLECTION_PATH","label":"Document path for create events","type":"STRING","description":"The Firestore document path to monitor for creation events.  Use {collectionId}/{documentId} to monitor all collections and documents, or specify a path like users/{userId} to monitor a specific collection.","required":true,"default":"{collectionId}/{documentId}","example":"users/{userId}"},{"param":"UPDATE_COLLECTION_PATH","label":"Document path for update events","type":"STRING","description":"The Firestore document path to monitor for update events. Use {collectionId}/{documentId} to monitor all collections and documents, or specify a path like users/{userId} to monitor a specific collection.","required":true,"default":"{collectionId}/{documentId}","example":"users/{userId}"},{"param":"DELETE_COLLECTION_PATH","label":"Document path for delete events","type":"STRING","description":"The Firestore document path to monitor for deletion events. Use {collectionId}/{documentId} to monitor all collections and documents, or specify a path like users/{userId} to monitor a specific collection.","required":true,"default":"{collectionId}/{documentId}","example":"users/{userId}"},{"param":"ENABLE_CREATE_WEBHOOK","label":"Enable create webhooks","type":"SELECT","description":"Enable webhook notifications when documents are created","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"true"},{"param":"ENABLE_UPDATE_WEBHOOK","label":"Enable update webhooks","type":"SELECT","description":"Enable webhook notifications when documents are updated","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"true"},{"param":"ENABLE_DELETE_WEBHOOK","label":"Enable delete webhooks","type":"SELECT","description":"Enable webhook notifications when documents are deleted","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"true"}],"preinstallContent":"# 📦 Firestore to Pabbly Webhook – Pre-Installation Guide\r\n\r\nThis guide explains how to configure Firebase Firestore triggers for integration with Firestore Webhook Connector for Pabbly Connect using Pabbly Connect. These triggers listen for Firestore document changes and initiate corresponding actions automatically.\r\n\r\nBefore you proceed with the installation, please review the following important information to ensure a smooth setup.\r\n\r\n---\r\n\r\n## ⚙️ Prerequisites\r\n\r\n- You must have a Firebase project with Firestore enabled.\r\n- You should have admin access to your Firebase Console to install extensions.\r\n- Make sure you have a valid **Pabbly Connect webhook URL** ready to receive webhook payloads.\r\n\r\n---\r\n\r\n## 🔑 Required Information\r\n\r\nDuring installation, you will be asked to provide these parameters:\r\n\r\n| Parameter Name              | Description                                                                 | Required | Example                                      |\r\n|----------------------------|-----------------------------------------------------------------------------|----------|----------------------------------------------|\r\n| `WEBHOOK_URL`              | Your **Pabbly Connect webhook endpoint** that will receive the payloads.    | ✅       | `https://connect.pabbly.com/workflow/send`  |\r\n| `ENABLE_CREATE_WEBHOOK`    | Set to `true` to send webhooks when documents are created.                  | ✅       | `true`                                       |\r\n| `ENABLE_UPDATE_WEBHOOK`    | Set to `true` to send webhooks on document updates.                         | ✅       | `true`                                       |\r\n| `ENABLE_DELETE_WEBHOOK`    | Set to `true` to send webhooks on document deletions.                       | ✅       | `true`                                       |\r\n| `CREATE_COLLECTION_PATH`   | Firestore path to monitor for creations (e.g. `{collectionId}/{documentId}`) | ❌       | `orders/{orderId}`                            |\r\n| `UPDATE_COLLECTION_PATH`   | Firestore path to monitor for updates.                                      | ❌       | `orders/{orderId}`                            |\r\n| `DELETE_COLLECTION_PATH`   | Firestore path to monitor for deletions.                                    | ❌       | `orders/{orderId}`                            |\r\n| `LOCATION`                 | Region to deploy the cloud functions.                                       | ❌       | `us-central1`                                |\r\n\r\n---\r\n\r\n## 🔍 Important Considerations\r\n\r\n- The extension requires your **Pabbly Connect Webhook URL** to accept HTTP POST requests with JSON payloads.\r\n- Make sure the Firestore collections you want to monitor exist or will be created.\r\n- The extension will incur Firebase Cloud Function and Firestore usage costs based on your activity.\r\n- Ensure you understand your Firestore security rules, as this extension listens to document changes.\r\n\r\n---\r\n\r\n## 📋 Installation Tips\r\n\r\n- Double-check your `WEBHOOK_URL` for correctness before installation.\r\n- If you want to monitor multiple collections or specific paths, use Firestore path wildcards like `{collectionId}/{documentId}`.\r\n- Choose the correct `LOCATION` closest to your Firestore data to reduce latency and costs.\r\n\r\n---\r\n\r\nIf you have questions or need help, please consult the [official Firebase Extensions documentation](https://firebase.google.com/docs/extensions) or reach out to support at: [support@pabbly.com].\r\n\r\n---\r\n\r\nOnce you have reviewed everything, proceed with the installation to enable real-time Firestore event webhooks to Pabbly Connect.\r\n\r\nHappy automating! 🚀\r\n","postinstallContent":"# 📦 Firestore Webhook Connector for Pabbly Connect – Post-Installation Guide\r\n\r\nThank you for installing the **Firestore Webhook Connector for Pabbly Connect** Extension!\r\n\r\nThis guide will help you verify the installation and start using your new extension to send Firestore event payloads to Pabbly Connect seamlessly.\r\n\r\n---\r\n\r\n## ✅ Verify Your Installation\r\n\r\n1. **Confirm Extension Deployment**  \r\n   Visit your Firebase Console → Extensions → Installed Extensions.  \r\n   Check that the extension status shows **Active** with no errors.\r\n\r\n2. **Check Configuration Parameters**  \r\n   Make sure you provided the correct values during installation, especially your `WEBHOOK_URL` — it must be a valid and reachable Pabbly Connect webhook endpoint.\r\n\r\n3. **Verify Firestore Paths**  \r\n   Confirm the Firestore collection paths you want to monitor are correct and exist in your Firestore database.  \r\n   - `CREATE_COLLECTION_PATH`  \r\n   - `UPDATE_COLLECTION_PATH`  \r\n   - `DELETE_COLLECTION_PATH`  \r\n\r\n---\r\n\r\n## 🛠️ Testing the Webhook Integration\r\n\r\nPerform these actions in your Firestore console or via your app to trigger events:\r\n\r\n- **Create a new document** in the configured `CREATE_COLLECTION_PATH`.\r\n- **Update a document** in the `UPDATE_COLLECTION_PATH`.\r\n- **Delete a document** in the `DELETE_COLLECTION_PATH`.\r\n\r\nAfter each action, verify:\r\n\r\n- Your Pabbly Connect webhook receives the JSON payload.\r\n- The payload contains expected data, including before/after diffs for updates.\r\n\r\n---\r\n\r\n## 📋 Monitoring and Logs\r\n\r\nTo troubleshoot or confirm webhook calls:\r\n\r\n1. Go to your Firebase Console → Functions → Logs.  \r\n2. Filter logs by the extension function name (usually includes `firestoreWebhook`).  \r\n3. Check for any errors or webhook call details.\r\n\r\n---\r\n\r\n## 🔄 Updating Your Configuration\r\n\r\nIf you need to change any parameters (e.g., webhook URL or collection paths):\r\n\r\n1. Go to Firebase Console → Extensions → Your Installed Extension.  \r\n2. Click **Update Configuration**.  \r\n3. Modify your parameters and save.  \r\n\r\nNote: Changes may take a few minutes to apply.\r\n\r\n---\r\n\r\n## 🚀 Next Steps & Tips\r\n\r\n- **Create Pabbly Connect workflows** to automate processing of incoming Firestore events.\r\n- Use the webhook payload data to trigger emails, update CRMs, notify teams, or sync with other services.\r\n- Secure your Pabbly webhook URL to only accept trusted requests if possible.\r\n\r\n---\r\n\r\nIf you have questions or need help, please consult the [official Firebase Extensions documentation](https://firebase.google.com/docs/extensions) or reach out to support at: [support@pabbly.com].\r\n\r\n---\r\n\r\nThanks again for using the Firestore Webhook to Pabbly Connect extension!  \r\nHappy automating! 🎉\r\n","readmeContent":"# Firebase Firestore Functions & Extensions\r\n\r\n## Overview\r\n\r\nThis project contains Firebase Cloud Functions and a Firebase Extension to automate workflows triggered by Firestore events. It listens to document changes (create, update, delete) and sends real-time webhooks or notifications, reducing manual work and enabling integration with external systems.\r\n\r\n## Features\r\n\r\n- Trigger Cloud Functions on Firestore document create, update, and delete events.\r\n- Send webhook notifications with document data.\r\n- Configurable Firebase Extension for easy installation and reuse.\r\n- Supports dynamic document paths with wildcards.\r\n- Includes error handling, logging, and security best practices.\r\n\r\n## Installation\r\n\r\n### Prerequisites\r\n\r\n- Node.js (v20 or newer)  \r\n- Firebase CLI (`npm install -g firebase-tools`)  \r\n- Firebase project with Firestore enabled\r\n\r\n### Steps\r\n\r\n1. Clone the repo:  \r\n\r\n2. Install dependencies:  \r\n\r\n3. Login to Firebase:  \r\n\r\n4. Select your Firebase project:  \r\n\r\n5. Install the extension locally:  \r\n\r\n6. Provide configuration parameters when prompted.\r\n\r\n## Usage\r\n\r\n- The extension triggers automatically on Firestore document events.\r\n- Configure webhook URLs and parameters during installation.\r\n- Monitor logs and performance via Firebase Console.\r\n\r\n## Configuration\r\n\r\n- Modify `extension.yaml` for metadata, parameters, and triggers.\r\n- Secure sensitive data (API keys, webhook URLs) during installation.\r\n- Use environment variables or Firebase Secret Manager for secrets.\r\n\r\n## Best Practices\r\n\r\n- Use wildcards for scalable document paths.\r\n- Add error handling and detailed logging with Firebase `logger`.\r\n- Keep sensitive data secure, avoid hardcoding secrets.\r\n- Monitor function usage and costs regularly.\r\n\r\n## Contributing\r\n\r\nContributions welcome! Fork the repo and submit pull requests.\r\n\r\n## License\r\n\r\nThis project is licensed under the Apache License 2.0 - see the LICENSE file for details.\r\n\r\n## Contact\r\n\r\nFor support, contact [Pabbly Connect] at [integrations@pabbly.com].\r\n","displayName":"Firestore Webhook Connector for Pabbly Connect","events":[{"type":"firebase.extensions.firestore-pabbly-connector.v1.complete","description":"Occurs when the extension has been successfully installed and all webhook functions are deployed and ready to monitor Firestore events."},{"type":"firebase.extensions.firestore-pabbly-connector.v1.document.created","description":"Occurs when a Firestore document is created and the webhook notification has been successfully sent to the configured Pabbly Connect endpoint."},{"type":"firebase.extensions.firestore-pabbly-connector.v1.document.updated","description":"Occurs when a Firestore document is updated and the webhook notification with before/after data has been successfully sent to the configured endpoint."},{"type":"firebase.extensions.firestore-pabbly-connector.v1.document.deleted","description":"Occurs when a Firestore document is deleted and the webhook notification has been successfully sent to the configured Pabbly Connect endpoint."},{"type":"firebase.extensions.firestore-pabbly-connector.v1.webhook.success","description":"Occurs when a webhook request is successfully delivered to the target URL with a 2xx HTTP response status."},{"type":"firebase.extensions.firestore-pabbly-connector.v1.webhook.failed","description":"Occurs when a webhook request fails to be delivered due to network errors, timeout, or non-2xx HTTP response status."},{"type":"firebase.extensions.firestore-pabbly-connector.v1.webhook.invalid_url","description":"Occurs when the configured webhook URL is invalid or not from an allowed domain (connect.pabbly.com or webhook.site)."},{"type":"firebase.extensions.firestore-pabbly-connector.v1.configuration.updated","description":"Occurs when the extension configuration is updated, such as changing webhook URLs, collection paths, or enabling/disabling event types."},{"type":"firebase.extensions.firestore-pabbly-connector.v1.error.processing","description":"Occurs when there is an error processing a Firestore event, such as data transformation failures or unexpected function errors."},{"type":"firebase.extensions.firestore-pabbly-connector.v1.function.timeout","description":"Occurs when a webhook function times out while processing a Firestore event or sending the webhook request."},{"type":"firebase.extensions.firestore-pabbly-connector.v1.rate_limit.exceeded","description":"Occurs when the webhook endpoint returns rate limiting errors or when the function encounters rate limits from the target service."}],"systemParams":[{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true},{"param":"firebaseextensions.v1beta.function/kmsKeyName","label":"KMS key name","type":"STRING","description":"Do you want to use a Customer Managed Encryption Key (CMEK) to encrypt this extension's functions? If you set this, you must also set a Docker repository encrypted by that key. See https://cloud.google.com/functions/docs/securing/cmek for more details.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/dockerRepository","label":"Docker repository","type":"STRING","description":"What Docker repository should be used to store function images? Default repository will be used if not set.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/repositories/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each v1 function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true}],"icon":"icon.png"},"state":"DEPRECATED","hash":"a991314c2ac7972cba264cd9e79ffcbc9386fd59cd342ddd74626bda873bf56f","createTime":"2025-06-14T19:21:13.542912Z","id":"0.1.0-beta.0","icons":[{"iconUri":"https://storage.googleapis.com/firebase-extensions-icons/extension_icons/pabblyconnect/firestore-pabbly-connector_0.1.0-beta.0@512.png","iconType":"PNG_512"}],"listing":{"state":"UNLISTED"}}]}
[info] 
You are about to upload a new version to Firebase's registry of extensions.

Extension: pabblyconnect/firestore-pabbly-connector
Version: 0.1.0 
Source: https://github.com/pabbly-apps/pc-integration-firestorewebhookextension\tree\v0.1.0
Release notes:
    * Introduced Firestore Webhook Connector extension for Pabbly Connect.
    * Sends webhook POST requests automatically when Firestore documents are created, updated, or deleted.
    * Supports configurable Firestore document paths and event types (create, update, delete).
    * Allows enabling/disabling webhook notifications per event type.
    * Includes Cloud Functions deployed with Node.js 20 runtime.
    * Validates webhook URLs to allow only https://connect.pabbly.com and https://webhook.site domains.

Once an extension version is uploaded, it becomes installable by other users and cannot be changed. If you wish to make changes after uploading, you will need to upload a new version.

[debug] [2025-06-16T08:04:30.128Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:04:30.129Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:04:30.129Z] >>> [apiv2][query] POST https://firebaseextensionspublisher.googleapis.com/v1beta/publishers/pabblyconnect/extensions/firestore-pabbly-connector/versions:createFromSource [none]
[debug] [2025-06-16T08:04:30.129Z] >>> [apiv2][body] POST https://firebaseextensionspublisher.googleapis.com/v1beta/publishers/pabblyconnect/extensions/firestore-pabbly-connector/versions:createFromSource {"versionId":"0.1.0","extensionRoot":".","githubRepositorySource":{"uri":"https://github.com/pabbly-apps/pc-integration-firestorewebhookextension","sourceRef":"v0.1.0"}}
[debug] [2025-06-16T08:04:31.436Z] <<< [apiv2][status] POST https://firebaseextensionspublisher.googleapis.com/v1beta/publishers/pabblyconnect/extensions/firestore-pabbly-connector/versions:createFromSource 200
[debug] [2025-06-16T08:04:31.436Z] <<< [apiv2][body] POST https://firebaseextensionspublisher.googleapis.com/v1beta/publishers/pabblyconnect/extensions/firestore-pabbly-connector/versions:createFromSource {"name":"projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844","metadata":{"@type":"type.googleapis.com/google.firebase.extensionspublisher.v1beta.ExtensionVersion","name":"publishers/pabblyconnect/extensions/firestore-pabbly-connector/versions/0.1.0","ref":"pabblyconnect/firestore-pabbly-connector@0.1.0","spec":{},"id":"0.1.0"}}
[debug] [2025-06-16T08:04:31.437Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:04:31.438Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:04:31.438Z] >>> [apiv2][query] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 [none]
[debug] [2025-06-16T08:04:32.302Z] <<< [apiv2][status] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 200
[debug] [2025-06-16T08:04:32.303Z] <<< [apiv2][body] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 {"name":"projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844"}
[debug] [2025-06-16T08:04:32.816Z] [LRO Poller] Retrying task index 0
[debug] [2025-06-16T08:04:32.817Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:04:32.818Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:04:32.819Z] >>> [apiv2][query] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 [none]
[debug] [2025-06-16T08:04:33.659Z] <<< [apiv2][status] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 200
[debug] [2025-06-16T08:04:33.660Z] <<< [apiv2][body] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 {"name":"projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844"}
[debug] [2025-06-16T08:04:34.667Z] [LRO Poller] Retrying task index 0
[debug] [2025-06-16T08:04:34.667Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:04:34.667Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:04:34.668Z] >>> [apiv2][query] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 [none]
[debug] [2025-06-16T08:04:35.469Z] <<< [apiv2][status] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 200
[debug] [2025-06-16T08:04:35.470Z] <<< [apiv2][body] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 {"name":"projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844"}
[debug] [2025-06-16T08:04:37.480Z] [LRO Poller] Retrying task index 0
[debug] [2025-06-16T08:04:37.481Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:04:37.482Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:04:37.482Z] >>> [apiv2][query] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 [none]
[debug] [2025-06-16T08:04:38.253Z] <<< [apiv2][status] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 200
[debug] [2025-06-16T08:04:38.254Z] <<< [apiv2][body] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 {"name":"projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844"}
[debug] [2025-06-16T08:04:42.259Z] [LRO Poller] Retrying task index 0
[debug] [2025-06-16T08:04:42.259Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:04:42.259Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:04:42.260Z] >>> [apiv2][query] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 [none]
[debug] [2025-06-16T08:04:43.203Z] <<< [apiv2][status] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 200
[debug] [2025-06-16T08:04:43.204Z] <<< [apiv2][body] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 {"name":"projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844"}
[debug] [2025-06-16T08:04:51.215Z] [LRO Poller] Retrying task index 0
[debug] [2025-06-16T08:04:51.216Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:04:51.216Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:04:51.216Z] >>> [apiv2][query] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 [none]
[debug] [2025-06-16T08:04:53.334Z] <<< [apiv2][status] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 200
[debug] [2025-06-16T08:04:53.335Z] <<< [apiv2][body] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 {"name":"projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844"}
[debug] [2025-06-16T08:05:09.338Z] [LRO Poller] Retrying task index 0
[debug] [2025-06-16T08:05:09.339Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:05:09.339Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:05:09.340Z] >>> [apiv2][query] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 [none]
[debug] [2025-06-16T08:05:11.259Z] <<< [apiv2][status] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 200
[debug] [2025-06-16T08:05:11.259Z] <<< [apiv2][body] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 {"name":"projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844"}
[debug] [2025-06-16T08:05:43.265Z] [LRO Poller] Retrying task index 0
[debug] [2025-06-16T08:05:43.266Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:05:43.266Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:05:43.267Z] >>> [apiv2][query] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 [none]
[debug] [2025-06-16T08:05:45.245Z] <<< [apiv2][status] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 200
[debug] [2025-06-16T08:05:45.245Z] <<< [apiv2][body] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 {"name":"projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844"}
[debug] [2025-06-16T08:06:45.250Z] [LRO Poller] Retrying task index 0
[debug] [2025-06-16T08:06:45.250Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:06:45.251Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:06:45.251Z] >>> [apiv2][query] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 [none]
[debug] [2025-06-16T08:06:47.316Z] <<< [apiv2][status] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 200
[debug] [2025-06-16T08:06:47.316Z] <<< [apiv2][body] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 {"name":"projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844"}
[debug] [2025-06-16T08:07:47.320Z] [LRO Poller] Retrying task index 0
[debug] [2025-06-16T08:07:47.321Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:07:47.322Z] Checked if tokens are valid: true, expires at: 1750063989321
[debug] [2025-06-16T08:07:47.322Z] >>> [apiv2][query] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 [none]
[debug] [2025-06-16T08:07:49.500Z] <<< [apiv2][status] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 200
[debug] [2025-06-16T08:07:49.501Z] <<< [apiv2][body] GET https://firebaseextensionspublisher.googleapis.com/v1beta/projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844 {"name":"projects/pabblyconnect-16ab5/operations/1a75c510-f907-4526-8862-f60a6a4ac844","done":true,"response":{"@type":"type.googleapis.com/google.firebase.extensionspublisher.v1beta.ExtensionVersion","name":"publishers/pabblyconnect/extensions/firestore-pabbly-connector/versions/0.1.0","ref":"pabblyconnect/firestore-pabbly-connector@0.1.0","spec":{"specVersion":"v1beta","name":"firestore-pabbly-connector","version":"0.1.0","description":"Automatically send webhook POST requests to Pabbly Connect when Firestore documents are created, updated, or deleted.","apis":[{"apiName":"firestore.googleapis.com","reason":"Required to listen to Firestore document changes"}],"resources":[{"name":"onCreateWebhook","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.create\n  resource: projects/${PROJECT_ID}/databases/${param:DATABASE_NAME}/documents/${param:CREATE_COLLECTION_PATH}\nlocation: ${param:LOCATION}\nruntime: nodejs20\n","description":"Listens for document creation events in Firestore and sends webhook notifications","deletionPolicy":"DELETE"},{"name":"onUpdateWebhook","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.update\n  resource: projects/${PROJECT_ID}/databases/${param:DATABASE_NAME}/documents/${param:UPDATE_COLLECTION_PATH}\nlocation: ${param:LOCATION}\nruntime: nodejs20\n","description":"Listens for document update events in Firestore and sends webhook notifications","deletionPolicy":"DELETE"},{"name":"onDeleteWebhook","type":"firebaseextensions.v1beta.function","propertiesYaml":"eventTrigger:\n  eventType: providers/cloud.firestore/eventTypes/document.delete\n  resource: projects/${PROJECT_ID}/databases/${param:DATABASE_NAME}/documents/${param:DELETE_COLLECTION_PATH}\nlocation: ${param:LOCATION}\nruntime: nodejs20\n","description":"Listens for document deletion events in Firestore and sends webhook notifications","deletionPolicy":"DELETE"}],"author":{"authorName":"Pabbly Connect","email":"support@pabbly.com","url":"https://connect.pabbly.com"},"license":"Apache-2.0","releaseNotesUrl":"https://github.com/pabbly-apps/pc-integration-firestorewebhookextension/blob/main/CHANGELOG.md","sourceUrl":"https://github.com/pabbly-apps/pc-integration-firestorewebhookextension","params":[{"param":"LOCATION","label":"Cloud Functions location","type":"SELECT","description":"Where do you want to deploy the functions created for this extension? For help selecting a location, refer to the location selection guide.","required":true,"options":[{"value":"us-central1","label":"Iowa (us-central1)"},{"value":"us-east1","label":"South Carolina (us-east1)"},{"value":"us-east4","label":"Northern Virginia (us-east4)"},{"value":"us-west2","label":"Los Angeles (us-west2)"},{"value":"us-west3","label":"Salt Lake City (us-west3)"},{"value":"us-west4","label":"Las Vegas (us-west4)"},{"value":"europe-west1","label":"Belgium (europe-west1)"},{"value":"europe-west2","label":"London (europe-west2)"},{"value":"europe-west3","label":"Frankfurt (europe-west3)"},{"value":"asia-east2","label":"Hong Kong (asia-east2)"},{"value":"asia-northeast1","label":"Tokyo (asia-northeast1)"},{"value":"asia-south1","label":"Mumbai (asia-south1)"},{"value":"australia-southeast1","label":"Sydney (australia-southeast1)"}],"default":"us-central1","immutable":true},{"param":"DATABASE_NAME","label":"Firestore Database Name","type":"STRING","description":"The Firestore database to monitor (e.g., (default), TestDB).  If unsure, use (default).","required":true,"default":"(default)"},{"param":"WEBHOOK_URL","label":"Pabbly Connect Webhook URL","type":"STRING","description":"The complete URL where webhook notifications will be sent via HTTP POST. This should be a publicly accessible endpoint that can receive JSON payloads.","required":true,"example":"https://connect.pabbly.com/workflow/sendwebhookdata/IjU3NjYwNTZiMDY*****zM1MjZmzMzUxMzE","validationRegex":"^https:\\/\\/(connect\\.pabbly\\.com|webhook\\.site)\\/.*","validationErrorMessage":"Please enter a URL starting with https://connect.pabbly.com or https://webhook.site"},{"param":"CREATE_COLLECTION_PATH","label":"Document path for create events","type":"STRING","description":"The Firestore document path to monitor for creation events.  Use {collectionId}/{documentId} to monitor all collections and documents, or specify a path like users/{userId} to monitor a specific collection.","required":true,"default":"{collectionId}/{documentId}","example":"users/{userId}"},{"param":"UPDATE_COLLECTION_PATH","label":"Document path for update events","type":"STRING","description":"The Firestore document path to monitor for update events. Use {collectionId}/{documentId} to monitor all collections and documents, or specify a path like users/{userId} to monitor a specific collection.","required":true,"default":"{collectionId}/{documentId}","example":"users/{userId}"},{"param":"DELETE_COLLECTION_PATH","label":"Document path for delete events","type":"STRING","description":"The Firestore document path to monitor for deletion events. Use {collectionId}/{documentId} to monitor all collections and documents, or specify a path like users/{userId} to monitor a specific collection.","required":true,"default":"{collectionId}/{documentId}","example":"users/{userId}"},{"param":"ENABLE_CREATE_WEBHOOK","label":"Enable create webhooks","type":"SELECT","description":"Enable webhook notifications when documents are created","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"true"},{"param":"ENABLE_UPDATE_WEBHOOK","label":"Enable update webhooks","type":"SELECT","description":"Enable webhook notifications when documents are updated","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"true"},{"param":"ENABLE_DELETE_WEBHOOK","label":"Enable delete webhooks","type":"SELECT","description":"Enable webhook notifications when documents are deleted","required":true,"options":[{"value":"true","label":"Yes"},{"value":"false","label":"No"}],"default":"true"}],"preinstallContent":"# 📦 Firestore to Pabbly Webhook – Pre-Installation Guide\n\nThis guide explains how to configure Firebase Firestore triggers for integration with Firestore Webhook Connector for Pabbly Connect using Pabbly Connect. These triggers listen for Firestore document changes and initiate corresponding actions automatically.\n\nBefore you proceed with the installation, please review the following important information to ensure a smooth setup.\n\n---\n\n## ⚙️ Prerequisites\n\n- You must have a Firebase project with Firestore enabled.\n- You should have admin access to your Firebase Console to install extensions.\n- Make sure you have a valid **Pabbly Connect webhook URL** ready to receive webhook payloads.\n\n---\n\n## 🔑 Required Information\n\nDuring installation, you will be asked to provide these parameters:\n\n| Parameter Name              | Description                                                                 | Required | Example                                      |\n|----------------------------|-----------------------------------------------------------------------------|----------|----------------------------------------------|\n| `WEBHOOK_URL`              | Your **Pabbly Connect webhook endpoint** that will receive the payloads.    | ✅       | `https://connect.pabbly.com/workflow/send`  |\n| `ENABLE_CREATE_WEBHOOK`    | Set to `true` to send webhooks when documents are created.                  | ✅       | `true`                                       |\n| `ENABLE_UPDATE_WEBHOOK`    | Set to `true` to send webhooks on document updates.                         | ✅       | `true`                                       |\n| `ENABLE_DELETE_WEBHOOK`    | Set to `true` to send webhooks on document deletions.                       | ✅       | `true`                                       |\n| `CREATE_COLLECTION_PATH`   | Firestore path to monitor for creations (e.g. `{collectionId}/{documentId}`) | ❌       | `orders/{orderId}`                            |\n| `UPDATE_COLLECTION_PATH`   | Firestore path to monitor for updates.                                      | ❌       | `orders/{orderId}`                            |\n| `DELETE_COLLECTION_PATH`   | Firestore path to monitor for deletions.                                    | ❌       | `orders/{orderId}`                            |\n| `LOCATION`                 | Region to deploy the cloud functions.                                       | ❌       | `us-central1`                                |\n\n---\n\n## 🔍 Important Considerations\n\n- The extension requires your **Pabbly Connect Webhook URL** to accept HTTP POST requests with JSON payloads.\n- Make sure the Firestore collections you want to monitor exist or will be created.\n- The extension will incur Firebase Cloud Function and Firestore usage costs based on your activity.\n- Ensure you understand your Firestore security rules, as this extension listens to document changes.\n\n---\n\n## 📋 Installation Tips\n\n- Double-check your `WEBHOOK_URL` for correctness before installation.\n- If you want to monitor multiple collections or specific paths, use Firestore path wildcards like `{collectionId}/{documentId}`.\n- Choose the correct `LOCATION` closest to your Firestore data to reduce latency and costs.\n\n---\n\nIf you have questions or need help, please consult the [official Firebase Extensions documentation](https://firebase.google.com/docs/extensions) or reach out to support at: [support@pabbly.com].\n\n---\n\nOnce you have reviewed everything, proceed with the installation to enable real-time Firestore event webhooks to Pabbly Connect.\n\nHappy automating! 🚀\n","postinstallContent":"# 📦 Firestore Webhook Connector for Pabbly Connect – Post-Installation Guide\n\nThank you for installing the **Firestore Webhook Connector for Pabbly Connect** Extension!\n\nThis guide will help you verify the installation and start using your new extension to send Firestore event payloads to Pabbly Connect seamlessly.\n\n---\n\n## ✅ Verify Your Installation\n\n1. **Confirm Extension Deployment**  \n   Visit your Firebase Console → Extensions → Installed Extensions.  \n   Check that the extension status shows **Active** with no errors.\n\n2. **Check Configuration Parameters**  \n   Make sure you provided the correct values during installation, especially your `WEBHOOK_URL` — it must be a valid and reachable Pabbly Connect webhook endpoint.\n\n3. **Verify Firestore Paths**  \n   Confirm the Firestore collection paths you want to monitor are correct and exist in your Firestore database.  \n   - `CREATE_COLLECTION_PATH`  \n   - `UPDATE_COLLECTION_PATH`  \n   - `DELETE_COLLECTION_PATH`  \n\n---\n\n## 🛠️ Testing the Webhook Integration\n\nPerform these actions in your Firestore console or via your app to trigger events:\n\n- **Create a new document** in the configured `CREATE_COLLECTION_PATH`.\n- **Update a document** in the `UPDATE_COLLECTION_PATH`.\n- **Delete a document** in the `DELETE_COLLECTION_PATH`.\n\nAfter each action, verify:\n\n- Your Pabbly Connect webhook receives the JSON payload.\n- The payload contains expected data, including before/after diffs for updates.\n\n---\n\n## 📋 Monitoring and Logs\n\nTo troubleshoot or confirm webhook calls:\n\n1. Go to your Firebase Console → Functions → Logs.  \n2. Filter logs by the extension function name (usually includes `firestoreWebhook`).  \n3. Check for any errors or webhook call details.\n\n---\n\n## 🔄 Updating Your Configuration\n\nIf you need to change any parameters (e.g., webhook URL or collection paths):\n\n1. Go to Firebase Console → Extensions → Your Installed Extension.  \n2. Click **Update Configuration**.  \n3. Modify your parameters and save.  \n\nNote: Changes may take a few minutes to apply.\n\n---\n\n## 🚀 Next Steps & Tips\n\n- **Create Pabbly Connect workflows** to automate processing of incoming Firestore events.\n- Use the webhook payload data to trigger emails, update CRMs, notify teams, or sync with other services.\n- Secure your Pabbly webhook URL to only accept trusted requests if possible.\n\n---\n\nIf you have questions or need help, please consult the [official Firebase Extensions documentation](https://firebase.google.com/docs/extensions) or reach out to support at: [support@pabbly.com].\n\n---\n\nThanks again for using the Firestore Webhook to Pabbly Connect extension!  \nHappy automating! 🎉\n","readmeContent":"# Firebase Firestore Functions & Extensions\n\n## Overview\n\nThis project contains Firebase Cloud Functions and a Firebase Extension to automate workflows triggered by Firestore events. It listens to document changes (create, update, delete) and sends real-time webhooks or notifications, reducing manual work and enabling integration with external systems.\n\n## Features\n\n- Trigger Cloud Functions on Firestore document create, update, and delete events.\n- Send webhook notifications with document data.\n- Configurable Firebase Extension for easy installation and reuse.\n- Supports dynamic document paths with wildcards.\n- Includes error handling, logging, and security best practices.\n\n## Installation\n\n### Prerequisites\n\n- Node.js (v20 or newer)  \n- Firebase CLI (`npm install -g firebase-tools`)  \n- Firebase project with Firestore enabled\n\n### Steps\n\n1. Clone the repo:  \n\n2. Install dependencies:  \n\n3. Login to Firebase:  \n\n4. Select your Firebase project:  \n\n5. Install the extension locally:  \n\n6. Provide configuration parameters when prompted.\n\n## Usage\n\n- The extension triggers automatically on Firestore document events.\n- Configure webhook URLs and parameters during installation.\n- Monitor logs and performance via Firebase Console.\n\n## Configuration\n\n- Modify `extension.yaml` for metadata, parameters, and triggers.\n- Secure sensitive data (API keys, webhook URLs) during installation.\n- Use environment variables or Firebase Secret Manager for secrets.\n\n## Best Practices\n\n- Use wildcards for scalable document paths.\n- Add error handling and detailed logging with Firebase `logger`.\n- Keep sensitive data secure, avoid hardcoding secrets.\n- Monitor function usage and costs regularly.\n\n## Contributing\n\nContributions welcome! Fork the repo and submit pull requests.\n\n## License\n\nThis project is licensed under the Apache License 2.0 - see the LICENSE file for details.\n\n## Contact\n\nFor support, contact [Pabbly Connect] at [integrations@pabbly.com].\n","displayName":"Firestore Webhook Connector for Pabbly Connect","events":[{"type":"firebase.extensions.firestore-pabbly-connector.v1.complete","description":"Occurs when the extension has been successfully installed and all webhook functions are deployed and ready to monitor Firestore events."},{"type":"firebase.extensions.firestore-pabbly-connector.v1.document.created","description":"Occurs when a Firestore document is created and the webhook notification has been successfully sent to the configured Pabbly Connect endpoint."},{"type":"firebase.extensions.firestore-pabbly-connector.v1.document.updated","description":"Occurs when a Firestore document is updated and the webhook notification with before/after data has been successfully sent to the configured endpoint."},{"type":"firebase.extensions.firestore-pabbly-connector.v1.document.deleted","description":"Occurs when a Firestore document is deleted and the webhook notification has been successfully sent to the configured Pabbly Connect endpoint."},{"type":"firebase.extensions.firestore-pabbly-connector.v1.webhook.success","description":"Occurs when a webhook request is successfully delivered to the target URL with a 2xx HTTP response status."},{"type":"firebase.extensions.firestore-pabbly-connector.v1.webhook.failed","description":"Occurs when a webhook request fails to be delivered due to network errors, timeout, or non-2xx HTTP response status."},{"type":"firebase.extensions.firestore-pabbly-connector.v1.webhook.invalid_url","description":"Occurs when the configured webhook URL is invalid or not from an allowed domain (connect.pabbly.com or webhook.site)."},{"type":"firebase.extensions.firestore-pabbly-connector.v1.configuration.updated","description":"Occurs when the extension configuration is updated, such as changing webhook URLs, collection paths, or enabling/disabling event types."},{"type":"firebase.extensions.firestore-pabbly-connector.v1.error.processing","description":"Occurs when there is an error processing a Firestore event, such as data transformation failures or unexpected function errors."},{"type":"firebase.extensions.firestore-pabbly-connector.v1.function.timeout","description":"Occurs when a webhook function times out while processing a Firestore event or sending the webhook request."},{"type":"firebase.extensions.firestore-pabbly-connector.v1.rate_limit.exceeded","description":"Occurs when the webhook endpoint returns rate limiting errors or when the function encounters rate limits from the target service."}],"systemParams":[{"param":"firebaseextensions.v1beta.function/timeoutSeconds","label":"Function timeout seconds","type":"STRING","description":"How long should functions run before timing out, in seconds (0-540)?","validationRegex":"^[1-9][0-9]{0,2}$","validationErrorMessage":"Function timeout should be an integer number of seconds, between 0 and 540","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnector","label":"VPC Connector","type":"STRING","description":"The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/connectors/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/vpcConnectorEgressSettings","label":"VPC Connector Egress settings","type":"SELECT","description":"Controls outgoing traffic when a VPC connector is configured","options":[{"value":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","label":"Unspecified"},{"value":"PRIVATE_RANGES_ONLY","label":"Private ranges only"},{"value":"ALL_TRAFFIC","label":"All traffic"}],"default":"VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED","advanced":true},{"param":"firebaseextensions.v1beta.function/minInstances","label":"Minimum function instances","type":"STRING","description":"The minimum number of instances of each function to run at once (0-1000)","default":"0","validationRegex":"^[0-9]*$","validationErrorMessage":"Min instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/maxInstances","label":"Maximum function instances","type":"STRING","description":"The maximum number of instances of each function to run at once","validationRegex":"^[0-9]*$","validationErrorMessage":"Max instances must be a non-negative integer.","advanced":true},{"param":"firebaseextensions.v1beta.function/ingressSettings","label":"Function ingress settings","type":"SELECT","description":"Where should functions allow incoming traffic from?","options":[{"value":"ALLOW_ALL","label":"Allow all"},{"value":"ALLOW_INTERNAL_ONLY","label":"Allow internal only"},{"value":"ALLOW_INTERNAL_AND_GCLB","label":"Allow internal and GCLB"}],"advanced":true},{"param":"firebaseextensions.v1beta.function/labels","label":"Function labels","type":"STRING","description":"Do you wish to set any labels on this instance's Cloud Functions? If so, provide up to 55 labels in the format 'key1:value, key2:value'","validationRegex":"^([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63},\\s*)*([a-zžà-ÿ][A-Za-zŽžÀ-ÿ0-9_-]{0,62}:[A-Za-zŽžÀ-ÿ0-9_-]{0,63})$","advanced":true},{"param":"firebaseextensions.v1beta.function/kmsKeyName","label":"KMS key name","type":"STRING","description":"Do you want to use a Customer Managed Encryption Key (CMEK) to encrypt this extension's functions? If you set this, you must also set a Docker repository encrypted by that key. See https://cloud.google.com/functions/docs/securing/cmek for more details.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/dockerRepository","label":"Docker repository","type":"STRING","description":"What Docker repository should be used to store function images? Default repository will be used if not set.","validationRegex":"^projects/([^/]+)/locations/([^/]+)/repositories/([^/]+)$","advanced":true},{"param":"firebaseextensions.v1beta.function/memory","label":"Function memory","type":"SELECT","description":"How much memory should be allocated to each v1 function?","options":[{"value":"128","label":"128MB"},{"value":"256","label":"256MB"},{"value":"512","label":"512MB"},{"value":"1024","label":"1GB"},{"value":"2048","label":"2GB"},{"value":"4096","label":"4GB"},{"value":"8192","label":"8GB"}],"default":"256","advanced":true}],"icon":"icon.png"},"state":"PUBLISHED","hash":"3a4f7477d5540a936cb441f55d3e6f4ae46b81461f3182dd1dc0c6db27551b2a","createTime":"2025-06-16T08:07:40.478537Z","id":"0.1.0","releaseNotes":"- Introduced Firestore Webhook Connector extension for Pabbly Connect.\n- Sends webhook POST requests automatically when Firestore documents are created, updated, or deleted.\n- Supports configurable Firestore document paths and event types (create, update, delete).\n- Allows enabling/disabling webhook notifications per event type.\n- Includes Cloud Functions deployed with Node.js 20 runtime.\n- Validates webhook URLs to allow only https://connect.pabbly.com and https://webhook.site domains.\n","buildSourceUri":"https://github.com/pabbly-apps/pc-integration-firestorewebhookextension/tree/98d3b49a29d957d4edd1dc64fad0eef1bc4dbd90","icons":[{"iconUri":"https://storage.googleapis.com/firebase-extensions-icons/extension_icons/pabblyconnect/firestore-pabbly-connector_0.1.0@512.png","iconType":"PNG_512"}],"extensionRoot":"."}}
[info] i  extensions: Install Link (https://console.firebase.google.com/project/_/extensions/install?ref=pabblyconnect/firestore-pabbly-connector@0.1.0)

 
[info] i  extensions: View in Console (https://console.firebase.google.com/project/pabblyconnect-16ab5/publisher/extensions/firestore-pabbly-connector/v/0.1.0)

 
